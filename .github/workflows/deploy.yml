name: Deploy

on:
  workflow_dispatch:
    inputs:
      deploy-netlify:
        description: "Enable Netlify deployment"
        type: boolean
        required: true
        default: true
      deploy-vercel:
        description: "Enable Vercel deployment"
        type: boolean
        required: true
        default: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure node
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Test
        run: npm run test

      - name: Build
        run: npm run build

      - name: Deploy to Netlify
        if: ${{ inputs.deploy-netlify }}
        uses: nwtgck/actions-netlify@v3.0
        with:
          publish-dir: "./dist/gha-demo/browser"
          production-branch: master
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy from GitHub Actions"
          enable-pull-request-comment: false
          enable-commit-comment: true
          overwrites-pull-request-comment: true
        timeout-minutes: 1

      - name: Install Vercel CLI
        if: ${{ inputs.deploy-vercel }}
        run: npm install --global vercel@canary

      - name: Pull Vercel Environment Information
        if: ${{ inputs.deploy-vercel }}
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build for Vercel
        if: ${{ inputs.deploy-vercel }}
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy to Vercel
        if: ${{ inputs.deploy-vercel }}
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
